
/*

link: hackerearth.com/problem/algorithm/connected-components-in-a-graph/description/
Given n, i.e. total number of nodes in an undirected graph numbered from 1 to n and an integer e, i.e. total number of edges in the graph. Calculate the total number of connected components in the graph. A connected component is a set of vertices in a graph that are linked to each other by paths.

Input Format:

First line of input line contains two integers n and e. Next e line will contain two integers u and v meaning that node u and node v are connected to each other in undirected fashion. 

Output Format:

For each input graph print an integer x denoting total number of connected components.

Constraints:

All the input values are well with in the integer range.
*/



#include<bits/stdc++.h>
#include<iostream>

using namespace std;

vector<int> ar[1000001];
int vis[1000001];

void dfs(int node){
    vis[node]=1;

    for(int child: ar[node]){
        if(!vis[child])
            dfs(child);
    }
}

int main(){
    int n,m,a,b;
    cin>>n>>m;

    for(int i=1;i<=m;i++){
        cin>>a>>b;
        ar[a].push_back(b);
        ar[b].push_back(a);
    }

    int cc=0;

    for(int i=1;i<=n;i++){
        if(!vis[i])
            dfs(i) , cc++;
    }

    cout<<cc<<endl;
}
